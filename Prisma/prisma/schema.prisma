// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Author{
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  age Int?
  email String @unique 
  profile Profile?
  books Book[]

  @@map("author")
}

model Profile{
  id Int @id @default(autoincrement())
  author Author @relation(fields: [authorEmail], references: [email])
  authorEmail String @unique
  instagram String?
  github String? @unique
  @@map("profile")
}

model Book{
  id Int @id @default(autoincrement())
  name String
  author Author? @relation(fields: [authorId], references: [id])
  authorId  Int?
  category CategoryOnBooks[]

  @@map("book")
}


model Category{
  id Int @id @default(autoincrement())
  categoryname String @unique
  books CategoryOnBooks[]

  @@map("category")
}

// relations for books and the categories

model CategoryOnBooks {
  category Category @relation(fields: [bookCategoryId],references: [id])
  bookCategoryId Int 
  // adding corresponding category name
  categoryName String @map("categoryname") // matches Category.categoryname
  book Book @relation(fields: [bookId], references: [id])
  bookId Int
  //adding corresponding bookname
  bookName String @map("name")

  @@id([bookCategoryId,bookId])
  @@map("category_on_book")
}